// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using sample_api.Data;

#nullable disable

namespace sample_api.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20230314221523_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("sample_api.Models.person", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("accessType")
                        .HasColumnType("text");

                    b.Property<string>("accrualStartDate")
                        .HasColumnType("text");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("bloodType")
                        .HasColumnType("text");

                    b.Property<DateTime>("contractEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("contractType")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("educationLevel")
                        .HasColumnType("text");

                    b.Property<string>("educationStatus")
                        .HasColumnType("text");

                    b.Property<string>("educationalInstitution")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<DateTime>("employmentStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .HasColumnType("text");

                    b.Property<int>("idNumber")
                        .HasColumnType("integer");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("levelOfDisability")
                        .HasColumnType("text");

                    b.Property<string>("maritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("militaryService")
                        .HasColumnType("text");

                    b.Property<DateTime>("militaryServiceDelayDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("mobilePhone")
                        .HasColumnType("text");

                    b.Property<string>("nationality")
                        .HasColumnType("text");

                    b.Property<int>("numberOfChildren")
                        .HasColumnType("integer");

                    b.Property<string>("partnerWorkStatus")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<bool>("tourStatus")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("workEmail")
                        .HasColumnType("text");

                    b.Property<string>("workPhone")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("sample_api.Models.unitList", b =>
                {
                    b.Property<string>("unitId")
                        .HasColumnType("text");

                    b.Property<string>("unitItemId")
                        .HasColumnType("text");

                    b.Property<string>("unitItemName")
                        .HasColumnType("text");

                    b.Property<string>("unitName")
                        .HasColumnType("text");

                    b.HasKey("unitId");

                    b.ToTable("unitLists");
                });
#pragma warning restore 612, 618
        }
    }
}
